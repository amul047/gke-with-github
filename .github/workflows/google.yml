# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: australia-southeast1-b	
  GKE_CLUSTER: ordering-cluster
  ORDERING_API_IMAGE: orderingapi
  SUPPLIER_API_IMAGE: supplierapi
  REGISTRY_HOSTNAME: asia.gcr.io
  ORDERING_DEPLOYMENT_NAME: ordering-api
  SUPPLIER_DEPLOYMENT_NAME: supplier-api

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    - name: Setup docker to authenticate
      run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    - name: Build the Docker image for Ordering API 
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$ORDERING_API_IMAGE":latest \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" src/Ordering.Api

    - name: Push the Docker image to Google Container Registry
      run: |
        docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$ORDERING_API_IMAGE:latest

    - name: Build the Docker image for Supplier API
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$SUPPLIER_API_IMAGE":latest \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" src/Supplier.Api

    - name: Push the Docker image to Google Container Registry
      run: |
        docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$SUPPLIER_API_IMAGE:latest
        
    - name: Deploy the Docker image to the GKE cluster
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        kubectl delete -f .
        kubectl apply -f .
        kubectl rollout status deployment/$ORDERING_DEPLOYMENT_NAME
        kubectl rollout status deployment/$SUPPLIER_DEPLOYMENT_NAME
        kubectl get services -o wide
